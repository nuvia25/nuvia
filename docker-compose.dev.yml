services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        user: ${APP_USER:-laravel}
        uid: ${APP_UID:-1000}
      target: development
    container_name: laravel-app
    restart: unless-stopped
    working_dir: /var/www
    environment:
      APP_ENV: local
      APP_DEBUG: "true"
      # DB/Redis/Mail default hosts for Docker network
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE:-magicai}
      DB_USERNAME: ${DB_USERNAME:-root}
      DB_PASSWORD: ${DB_PASSWORD:-secret}
      REDIS_HOST: redis
      MAIL_HOST: mailpit
      MAIL_PORT: 1025
      # Better file watching on Windows/macOS
      CHOKIDAR_USEPOLLING: "true"
      WATCHPACK_POLLING: "true"
      # Xdebug defaults work on Windows & modern Linux Docker
      XDEBUG_MODE: "off"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "9000:9000"   # php-fpm (internal)
      - "5173:5173"   # vite (npm run dev)
    volumes:
      - ./:/var/www
    networks:
      - laravel-network
    depends_on:
      db:
        condition: service_healthy

  db:
    image: mysql:8.0
    container_name: laravel-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-magicai}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-secret}
      MYSQL_ALLOW_EMPTY_PASSWORD: "no"
    volumes:
      - mysqldata:/var/lib/mysql
    ports:
      - "${DB_PORT:-3306}:3306"
    networks:
      - laravel-network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: laravel-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - laravel-network

  mailpit:
    image: axllent/mailpit:latest
    container_name: laravel-mailpit
    restart: unless-stopped
    ports:
      - "8025:8025"   # UI
      - "1025:1025"   # SMTP
    networks:
      - laravel-network

  nginx:
    image: nginx:alpine
    container_name: laravel-nginx
    restart: unless-stopped
    ports:
      - "${APP_PORT:-80}:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/dev.conf:/etc/nginx/conf.d/default.conf
    networks:
      - laravel-network
    depends_on:
      - app

networks:
  laravel-network:
    driver: bridge

volumes:
  mysqldata:
    driver: local