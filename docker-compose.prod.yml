services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
      args:
        user: ${APP_USER:-laravel}
        uid: ${APP_UID:-1000}
    container_name: laravel-app-prod
    restart: unless-stopped
    working_dir: /var/www
    environment:
      APP_ENV: production
      APP_DEBUG: "false"
      DB_CONNECTION: ${DB_CONNECTION:-mysql}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT:-3306}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    networks:
      - prod-network

  nginx:
    image: nginx:alpine
    container_name: laravel-nginx-prod
    restart: unless-stopped
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/pandy-http.conf:/etc/nginx/conf.d/pandy-http.conf:ro
      - ./docker/nginx/pandy-https.conf:/etc/nginx/conf.d/pandy-https.conf:ro
      - ./public:/var/www/public:ro
      - letsencrypt:/etc/letsencrypt
      - certbot-web:/var/www/certbot
    command: >
      sh -c "
      echo '[nginx] üöÄ Inicializando configura√ß√£o para pandy.pro' &&
      
      # Remove configura√ß√£o padr√£o do nginx para evitar conflitos
      rm -f /etc/nginx/conf.d/default.conf &&
      
      # Aguarda certificados
      sleep 3 &&
      
      # Seleciona configura√ß√£o baseada em SSL
      if [ -f '/etc/letsencrypt/live/pandy.pro/fullchain.pem' ] && [ -f '/etc/letsencrypt/live/pandy.pro/privkey.pem' ]; then
        echo '[nginx] ‚úÖ Certificados SSL encontrados - Ativando HTTPS' &&
        cp /etc/nginx/conf.d/pandy-https.conf /etc/nginx/conf.d/active.conf &&
        echo '[nginx] üîí Modo HTTPS ativado';
      else
        echo '[nginx] ‚ö†Ô∏è Certificados SSL n√£o encontrados - Ativando HTTP' &&
        cp /etc/nginx/conf.d/pandy-http.conf /etc/nginx/conf.d/active.conf &&
        echo '[nginx] üåê Modo HTTP ativado';
      fi &&
      
      echo '[nginx] üîß Testando configura√ß√£o...' &&
      nginx -t &&
      echo '[nginx] üöÄ Iniciando Nginx...' &&
      exec nginx -g 'daemon off;'
      "
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - prod-network

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      - letsencrypt:/etc/letsencrypt
      - certbot-web:/var/www/certbot
    entrypoint: "/bin/sh -c"
    command: "certbot --version"
    networks:
      - prod-network

networks:
  prod-network:
    driver: bridge

volumes:
  letsencrypt:
  certbot-web: