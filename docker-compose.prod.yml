services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
      args:
        user: ${APP_USER:-laravel}
        uid: ${APP_UID:-1000}
    container_name: laravel-app-prod
    restart: unless-stopped
    working_dir: /var/www
    environment:
      APP_ENV: production
      APP_DEBUG: "false"
      # Use external DB (provide via .env or environment)
      DB_CONNECTION: ${DB_CONNECTION:-mysql}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT:-3306}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    networks:
      - prod-network

  nginx:
    image: nginx:alpine
    container_name: laravel-nginx-prod
    restart: unless-stopped
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/prod.conf.template:/etc/nginx/templates/prod.conf.template:ro
      - certbot-www:/var/www/certbot
      - letsencrypt:/etc/letsencrypt
      - ./public:/var/www/public:ro
    environment:
      SERVER_NAME: ${SERVER_NAME}
    command: /bin/sh -c "apk add --no-cache gettext >/dev/null 2>&1 || true; envsubst < /etc/nginx/templates/prod.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    networks:
      - prod-network

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      - certbot-www:/var/www/certbot
      - letsencrypt:/etc/letsencrypt
    entrypoint: >
      sh -c "trap exit TERM; \
      while :; do \
        certbot renew --webroot -w /var/www/certbot --non-interactive --agree-tos --quiet || true; \
        sleep 12h & wait $${!}; \
      done"
    networks:
      - prod-network

networks:
  prod-network:
    driver: bridge

volumes:
  certbot-www:
  letsencrypt:
